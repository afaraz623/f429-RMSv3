ARM GAS  /tmp/ccnWg2kD.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_TIM_PeriodElapsedCallback
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_TIM_PeriodElapsedCallback:
  27              	.LVL0:
  28              	.LFB135:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccnWg2kD.s 			page 2


  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE END PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  59:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /**
  64:Core/Src/main.c ****   * @brief  The application entry point.
  65:Core/Src/main.c ****   * @retval int
  66:Core/Src/main.c ****   */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /**
  69:Core/Src/main.c ****   * @brief System Clock Configuration
  70:Core/Src/main.c ****   * @retval None
  71:Core/Src/main.c ****   */
  72:Core/Src/main.c **** void SystemClock_Config(void)
  73:Core/Src/main.c **** {
  74:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  75:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
  78:Core/Src/main.c ****   */
  79:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  80:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
  83:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
  84:Core/Src/main.c ****   */
  85:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  86:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
ARM GAS  /tmp/ccnWg2kD.s 			page 3


  87:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  88:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  89:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
  90:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 180;
  91:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  92:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
  93:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  94:Core/Src/main.c ****   {
  95:Core/Src/main.c ****     Error_Handler();
  96:Core/Src/main.c ****   }
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /** Activate the Over-Drive mode
  99:Core/Src/main.c ****   */
 100:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 101:Core/Src/main.c ****   {
 102:Core/Src/main.c ****     Error_Handler();
 103:Core/Src/main.c ****   }
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 106:Core/Src/main.c ****   */
 107:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 108:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 109:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 110:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 111:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 112:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 115:Core/Src/main.c ****   {
 116:Core/Src/main.c ****     Error_Handler();
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c **** }
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** /* USER CODE END 4 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** /**
 125:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 126:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 127:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 128:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 129:Core/Src/main.c ****   * @param  htim : TIM handle
 130:Core/Src/main.c ****   * @retval None
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 133:Core/Src/main.c **** {
  30              		.loc 1 133 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 133 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
ARM GAS  /tmp/ccnWg2kD.s 			page 4


 134:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 137:Core/Src/main.c ****   if (htim->Instance == TIM1) {
  40              		.loc 1 137 3 is_stmt 1 view .LVU2
  41              		.loc 1 137 11 is_stmt 0 view .LVU3
  42 0002 0268     		ldr	r2, [r0]
  43              		.loc 1 137 6 view .LVU4
  44 0004 034B     		ldr	r3, .L5
  45 0006 9A42     		cmp	r2, r3
  46 0008 00D0     		beq	.L4
  47              	.LVL1:
  48              	.L1:
 138:Core/Src/main.c ****     HAL_IncTick();
 139:Core/Src/main.c ****   }
 140:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 143:Core/Src/main.c **** }
  49              		.loc 1 143 1 view .LVU5
  50 000a 08BD     		pop	{r3, pc}
  51              	.LVL2:
  52              	.L4:
 138:Core/Src/main.c ****     HAL_IncTick();
  53              		.loc 1 138 5 is_stmt 1 view .LVU6
  54 000c FFF7FEFF 		bl	HAL_IncTick
  55              	.LVL3:
  56              		.loc 1 143 1 is_stmt 0 view .LVU7
  57 0010 FBE7     		b	.L1
  58              	.L6:
  59 0012 00BF     		.align	2
  60              	.L5:
  61 0014 00000140 		.word	1073807360
  62              		.cfi_endproc
  63              	.LFE135:
  65              		.section	.text.Error_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	Error_Handler
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  72              	Error_Handler:
  73              	.LFB136:
 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** /**
 146:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 147:Core/Src/main.c ****   * @retval None
 148:Core/Src/main.c ****   */
 149:Core/Src/main.c **** void Error_Handler(void)
 150:Core/Src/main.c **** {
  74              		.loc 1 150 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ Volatile: function does not return.
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
 151:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  /tmp/ccnWg2kD.s 			page 5


 152:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 153:Core/Src/main.c ****   __disable_irq();
  80              		.loc 1 153 3 view .LVU9
  81              	.LBB4:
  82              	.LBI4:
  83              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
ARM GAS  /tmp/ccnWg2kD.s 			page 6


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  /tmp/ccnWg2kD.s 			page 7


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  84              		.loc 2 140 27 view .LVU10
  85              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  86              		.loc 2 142 3 view .LVU11
  87              		.syntax unified
  88              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  89 0000 72B6     		cpsid i
  90              	@ 0 "" 2
  91              		.thumb
  92              		.syntax unified
  93              	.L8:
  94              	.LBE5:
  95              	.LBE4:
 154:Core/Src/main.c ****   while (1)
  96              		.loc 1 154 3 discriminator 1 view .LVU12
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****   }
  97              		.loc 1 156 3 discriminator 1 view .LVU13
 154:Core/Src/main.c ****   while (1)
  98              		.loc 1 154 9 discriminator 1 view .LVU14
  99 0002 FEE7     		b	.L8
 100              		.cfi_endproc
 101              	.LFE136:
 103              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  /tmp/ccnWg2kD.s 			page 8


 104              		.align	1
 105              		.global	SystemClock_Config
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 110              	SystemClock_Config:
 111              	.LFB134:
  73:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 112              		.loc 1 73 1 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 80
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 00B5     		push	{lr}
 117              	.LCFI1:
 118              		.cfi_def_cfa_offset 4
 119              		.cfi_offset 14, -4
 120 0002 95B0     		sub	sp, sp, #84
 121              	.LCFI2:
 122              		.cfi_def_cfa_offset 88
  74:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123              		.loc 1 74 3 view .LVU16
  74:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 124              		.loc 1 74 22 is_stmt 0 view .LVU17
 125 0004 3022     		movs	r2, #48
 126 0006 0021     		movs	r1, #0
 127 0008 08A8     		add	r0, sp, #32
 128 000a FFF7FEFF 		bl	memset
 129              	.LVL4:
  75:Core/Src/main.c **** 
 130              		.loc 1 75 3 is_stmt 1 view .LVU18
  75:Core/Src/main.c **** 
 131              		.loc 1 75 22 is_stmt 0 view .LVU19
 132 000e 0023     		movs	r3, #0
 133 0010 0393     		str	r3, [sp, #12]
 134 0012 0493     		str	r3, [sp, #16]
 135 0014 0593     		str	r3, [sp, #20]
 136 0016 0693     		str	r3, [sp, #24]
 137 0018 0793     		str	r3, [sp, #28]
  79:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 138              		.loc 1 79 3 is_stmt 1 view .LVU20
 139              	.LBB6:
  79:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 140              		.loc 1 79 3 view .LVU21
 141 001a 0193     		str	r3, [sp, #4]
  79:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 142              		.loc 1 79 3 view .LVU22
 143 001c 234A     		ldr	r2, .L17
 144 001e 116C     		ldr	r1, [r2, #64]
 145 0020 41F08051 		orr	r1, r1, #268435456
 146 0024 1164     		str	r1, [r2, #64]
  79:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 147              		.loc 1 79 3 view .LVU23
 148 0026 126C     		ldr	r2, [r2, #64]
 149 0028 02F08052 		and	r2, r2, #268435456
 150 002c 0192     		str	r2, [sp, #4]
  79:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 151              		.loc 1 79 3 view .LVU24
ARM GAS  /tmp/ccnWg2kD.s 			page 9


 152 002e 019A     		ldr	r2, [sp, #4]
 153              	.LBE6:
  79:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 154              		.loc 1 79 3 view .LVU25
  80:Core/Src/main.c **** 
 155              		.loc 1 80 3 view .LVU26
 156              	.LBB7:
  80:Core/Src/main.c **** 
 157              		.loc 1 80 3 view .LVU27
 158 0030 0293     		str	r3, [sp, #8]
  80:Core/Src/main.c **** 
 159              		.loc 1 80 3 view .LVU28
 160 0032 1F4B     		ldr	r3, .L17+4
 161 0034 1A68     		ldr	r2, [r3]
 162 0036 42F44042 		orr	r2, r2, #49152
 163 003a 1A60     		str	r2, [r3]
  80:Core/Src/main.c **** 
 164              		.loc 1 80 3 view .LVU29
 165 003c 1B68     		ldr	r3, [r3]
 166 003e 03F44043 		and	r3, r3, #49152
 167 0042 0293     		str	r3, [sp, #8]
  80:Core/Src/main.c **** 
 168              		.loc 1 80 3 view .LVU30
 169 0044 029B     		ldr	r3, [sp, #8]
 170              	.LBE7:
  80:Core/Src/main.c **** 
 171              		.loc 1 80 3 view .LVU31
  85:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 172              		.loc 1 85 3 view .LVU32
  85:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 173              		.loc 1 85 36 is_stmt 0 view .LVU33
 174 0046 0123     		movs	r3, #1
 175 0048 0893     		str	r3, [sp, #32]
  86:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 176              		.loc 1 86 3 is_stmt 1 view .LVU34
  86:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 177              		.loc 1 86 30 is_stmt 0 view .LVU35
 178 004a 4FF48033 		mov	r3, #65536
 179 004e 0993     		str	r3, [sp, #36]
  87:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 180              		.loc 1 87 3 is_stmt 1 view .LVU36
  87:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 181              		.loc 1 87 34 is_stmt 0 view .LVU37
 182 0050 0223     		movs	r3, #2
 183 0052 0E93     		str	r3, [sp, #56]
  88:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 184              		.loc 1 88 3 is_stmt 1 view .LVU38
  88:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 185              		.loc 1 88 35 is_stmt 0 view .LVU39
 186 0054 4FF48002 		mov	r2, #4194304
 187 0058 0F92     		str	r2, [sp, #60]
  89:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 180;
 188              		.loc 1 89 3 is_stmt 1 view .LVU40
  89:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 180;
 189              		.loc 1 89 30 is_stmt 0 view .LVU41
 190 005a 0422     		movs	r2, #4
 191 005c 1092     		str	r2, [sp, #64]
ARM GAS  /tmp/ccnWg2kD.s 			page 10


  90:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 192              		.loc 1 90 3 is_stmt 1 view .LVU42
  90:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 193              		.loc 1 90 30 is_stmt 0 view .LVU43
 194 005e B422     		movs	r2, #180
 195 0060 1192     		str	r2, [sp, #68]
  91:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 196              		.loc 1 91 3 is_stmt 1 view .LVU44
  91:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 197              		.loc 1 91 30 is_stmt 0 view .LVU45
 198 0062 1293     		str	r3, [sp, #72]
  92:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 199              		.loc 1 92 3 is_stmt 1 view .LVU46
  92:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 200              		.loc 1 92 30 is_stmt 0 view .LVU47
 201 0064 0323     		movs	r3, #3
 202 0066 1393     		str	r3, [sp, #76]
  93:Core/Src/main.c ****   {
 203              		.loc 1 93 3 is_stmt 1 view .LVU48
  93:Core/Src/main.c ****   {
 204              		.loc 1 93 7 is_stmt 0 view .LVU49
 205 0068 08A8     		add	r0, sp, #32
 206 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 207              	.LVL5:
  93:Core/Src/main.c ****   {
 208              		.loc 1 93 6 view .LVU50
 209 006e B0B9     		cbnz	r0, .L14
 100:Core/Src/main.c ****   {
 210              		.loc 1 100 3 is_stmt 1 view .LVU51
 100:Core/Src/main.c ****   {
 211              		.loc 1 100 7 is_stmt 0 view .LVU52
 212 0070 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 213              	.LVL6:
 100:Core/Src/main.c ****   {
 214              		.loc 1 100 6 view .LVU53
 215 0074 A8B9     		cbnz	r0, .L15
 107:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 216              		.loc 1 107 3 is_stmt 1 view .LVU54
 107:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 217              		.loc 1 107 31 is_stmt 0 view .LVU55
 218 0076 0F23     		movs	r3, #15
 219 0078 0393     		str	r3, [sp, #12]
 109:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 220              		.loc 1 109 3 is_stmt 1 view .LVU56
 109:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 221              		.loc 1 109 34 is_stmt 0 view .LVU57
 222 007a 0223     		movs	r3, #2
 223 007c 0493     		str	r3, [sp, #16]
 110:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 224              		.loc 1 110 3 is_stmt 1 view .LVU58
 110:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 225              		.loc 1 110 35 is_stmt 0 view .LVU59
 226 007e 0023     		movs	r3, #0
 227 0080 0593     		str	r3, [sp, #20]
 111:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 228              		.loc 1 111 3 is_stmt 1 view .LVU60
 111:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
ARM GAS  /tmp/ccnWg2kD.s 			page 11


 229              		.loc 1 111 36 is_stmt 0 view .LVU61
 230 0082 4FF4A053 		mov	r3, #5120
 231 0086 0693     		str	r3, [sp, #24]
 112:Core/Src/main.c **** 
 232              		.loc 1 112 3 is_stmt 1 view .LVU62
 112:Core/Src/main.c **** 
 233              		.loc 1 112 36 is_stmt 0 view .LVU63
 234 0088 4FF48053 		mov	r3, #4096
 235 008c 0793     		str	r3, [sp, #28]
 114:Core/Src/main.c ****   {
 236              		.loc 1 114 3 is_stmt 1 view .LVU64
 114:Core/Src/main.c ****   {
 237              		.loc 1 114 7 is_stmt 0 view .LVU65
 238 008e 0521     		movs	r1, #5
 239 0090 03A8     		add	r0, sp, #12
 240 0092 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 241              	.LVL7:
 114:Core/Src/main.c ****   {
 242              		.loc 1 114 6 view .LVU66
 243 0096 30B9     		cbnz	r0, .L16
 118:Core/Src/main.c **** 
 244              		.loc 1 118 1 view .LVU67
 245 0098 15B0     		add	sp, sp, #84
 246              	.LCFI3:
 247              		.cfi_remember_state
 248              		.cfi_def_cfa_offset 4
 249              		@ sp needed
 250 009a 5DF804FB 		ldr	pc, [sp], #4
 251              	.L14:
 252              	.LCFI4:
 253              		.cfi_restore_state
  95:Core/Src/main.c ****   }
 254              		.loc 1 95 5 is_stmt 1 view .LVU68
 255 009e FFF7FEFF 		bl	Error_Handler
 256              	.LVL8:
 257              	.L15:
 102:Core/Src/main.c ****   }
 258              		.loc 1 102 5 view .LVU69
 259 00a2 FFF7FEFF 		bl	Error_Handler
 260              	.LVL9:
 261              	.L16:
 116:Core/Src/main.c ****   }
 262              		.loc 1 116 5 view .LVU70
 263 00a6 FFF7FEFF 		bl	Error_Handler
 264              	.LVL10:
 265              	.L18:
 266 00aa 00BF     		.align	2
 267              	.L17:
 268 00ac 00380240 		.word	1073887232
 269 00b0 00700040 		.word	1073770496
 270              		.cfi_endproc
 271              	.LFE134:
 273              		.text
 274              	.Letext0:
 275              		.file 3 "/opt/gcc-arm/arm-none-eabi/include/machine/_default_types.h"
 276              		.file 4 "/opt/gcc-arm/arm-none-eabi/include/sys/_stdint.h"
 277              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
ARM GAS  /tmp/ccnWg2kD.s 			page 12


 278              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 279              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 280              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 281              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 282              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 283              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 284              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_pwr_ex.h"
 285              		.file 13 "<built-in>"
ARM GAS  /tmp/ccnWg2kD.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccnWg2kD.s:20     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccnWg2kD.s:26     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccnWg2kD.s:61     .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccnWg2kD.s:66     .text.Error_Handler:0000000000000000 $t
     /tmp/ccnWg2kD.s:72     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccnWg2kD.s:104    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccnWg2kD.s:110    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccnWg2kD.s:268    .text.SystemClock_Config:00000000000000ac $d

UNDEFINED SYMBOLS
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
