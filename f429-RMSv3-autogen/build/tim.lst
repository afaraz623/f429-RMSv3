ARM GAS  /tmp/ccR61E3J.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_TIM3_Init,"ax",%progbits
  20              		.align	1
  21              		.global	MX_TIM3_Init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_TIM3_Init:
  27              	.LFB130:
  28              		.file 1 "Core/Src/tim.c"
   1:Core/Src/tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/tim.c **** /**
   3:Core/Src/tim.c ****   ******************************************************************************
   4:Core/Src/tim.c ****   * @file    tim.c
   5:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/tim.c ****   *          of the TIM instances.
   7:Core/Src/tim.c ****   ******************************************************************************
   8:Core/Src/tim.c ****   * @attention
   9:Core/Src/tim.c ****   *
  10:Core/Src/tim.c ****   * Copyright (c) 2022 STMicroelectronics.
  11:Core/Src/tim.c ****   * All rights reserved.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/tim.c ****   * in the root directory of this software component.
  15:Core/Src/tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** /* USER CODE END Header */
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim3;
  28:Core/Src/tim.c **** TIM_HandleTypeDef htim8;
  29:Core/Src/tim.c **** 
  30:Core/Src/tim.c **** /* TIM3 init function */
ARM GAS  /tmp/ccR61E3J.s 			page 2


  31:Core/Src/tim.c **** void MX_TIM3_Init(void)
  32:Core/Src/tim.c **** {
  29              		.loc 1 32 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 48
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 8DB0     		sub	sp, sp, #52
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 56
  33:Core/Src/tim.c **** 
  34:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_Init 0 */
  35:Core/Src/tim.c **** 
  36:Core/Src/tim.c ****   /* USER CODE END TIM3_Init 0 */
  37:Core/Src/tim.c **** 
  38:Core/Src/tim.c ****   TIM_Encoder_InitTypeDef sConfig = {0};
  40              		.loc 1 38 3 view .LVU1
  41              		.loc 1 38 27 is_stmt 0 view .LVU2
  42 0004 2422     		movs	r2, #36
  43 0006 0021     		movs	r1, #0
  44 0008 03A8     		add	r0, sp, #12
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
  39:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  47              		.loc 1 39 3 is_stmt 1 view .LVU3
  48              		.loc 1 39 27 is_stmt 0 view .LVU4
  49 000e 0023     		movs	r3, #0
  50 0010 0193     		str	r3, [sp, #4]
  51 0012 0293     		str	r3, [sp, #8]
  40:Core/Src/tim.c **** 
  41:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_Init 1 */
  42:Core/Src/tim.c **** 
  43:Core/Src/tim.c ****   /* USER CODE END TIM3_Init 1 */
  44:Core/Src/tim.c ****   htim3.Instance = TIM3;
  52              		.loc 1 44 3 is_stmt 1 view .LVU5
  53              		.loc 1 44 18 is_stmt 0 view .LVU6
  54 0014 1148     		ldr	r0, .L7
  55 0016 124A     		ldr	r2, .L7+4
  56 0018 0260     		str	r2, [r0]
  45:Core/Src/tim.c ****   htim3.Init.Prescaler = 0;
  57              		.loc 1 45 3 is_stmt 1 view .LVU7
  58              		.loc 1 45 24 is_stmt 0 view .LVU8
  59 001a 4360     		str	r3, [r0, #4]
  46:Core/Src/tim.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
  60              		.loc 1 46 3 is_stmt 1 view .LVU9
  61              		.loc 1 46 26 is_stmt 0 view .LVU10
  62 001c 8360     		str	r3, [r0, #8]
  47:Core/Src/tim.c ****   htim3.Init.Period = 65535;
  63              		.loc 1 47 3 is_stmt 1 view .LVU11
  64              		.loc 1 47 21 is_stmt 0 view .LVU12
  65 001e 4FF6FF72 		movw	r2, #65535
  66 0022 C260     		str	r2, [r0, #12]
  48:Core/Src/tim.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  67              		.loc 1 48 3 is_stmt 1 view .LVU13
ARM GAS  /tmp/ccR61E3J.s 			page 3


  68              		.loc 1 48 28 is_stmt 0 view .LVU14
  69 0024 0361     		str	r3, [r0, #16]
  49:Core/Src/tim.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  70              		.loc 1 49 3 is_stmt 1 view .LVU15
  71              		.loc 1 49 32 is_stmt 0 view .LVU16
  72 0026 8361     		str	r3, [r0, #24]
  50:Core/Src/tim.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
  73              		.loc 1 50 3 is_stmt 1 view .LVU17
  74              		.loc 1 50 23 is_stmt 0 view .LVU18
  75 0028 0123     		movs	r3, #1
  76 002a 0393     		str	r3, [sp, #12]
  51:Core/Src/tim.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
  77              		.loc 1 51 3 is_stmt 1 view .LVU19
  52:Core/Src/tim.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
  78              		.loc 1 52 3 view .LVU20
  79              		.loc 1 52 24 is_stmt 0 view .LVU21
  80 002c 0593     		str	r3, [sp, #20]
  53:Core/Src/tim.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
  81              		.loc 1 53 3 is_stmt 1 view .LVU22
  54:Core/Src/tim.c ****   sConfig.IC1Filter = 0;
  82              		.loc 1 54 3 view .LVU23
  55:Core/Src/tim.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
  83              		.loc 1 55 3 view .LVU24
  56:Core/Src/tim.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
  84              		.loc 1 56 3 view .LVU25
  85              		.loc 1 56 24 is_stmt 0 view .LVU26
  86 002e 0993     		str	r3, [sp, #36]
  57:Core/Src/tim.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
  87              		.loc 1 57 3 is_stmt 1 view .LVU27
  58:Core/Src/tim.c ****   sConfig.IC2Filter = 0;
  88              		.loc 1 58 3 view .LVU28
  59:Core/Src/tim.c ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
  89              		.loc 1 59 3 view .LVU29
  90              		.loc 1 59 7 is_stmt 0 view .LVU30
  91 0030 03A9     		add	r1, sp, #12
  92 0032 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
  93              	.LVL1:
  94              		.loc 1 59 6 view .LVU31
  95 0036 50B9     		cbnz	r0, .L5
  96              	.L2:
  60:Core/Src/tim.c ****   {
  61:Core/Src/tim.c ****     Error_Handler();
  62:Core/Src/tim.c ****   }
  63:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  97              		.loc 1 63 3 is_stmt 1 view .LVU32
  98              		.loc 1 63 37 is_stmt 0 view .LVU33
  99 0038 0023     		movs	r3, #0
 100 003a 0193     		str	r3, [sp, #4]
  64:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 101              		.loc 1 64 3 is_stmt 1 view .LVU34
 102              		.loc 1 64 33 is_stmt 0 view .LVU35
 103 003c 0293     		str	r3, [sp, #8]
  65:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 104              		.loc 1 65 3 is_stmt 1 view .LVU36
 105              		.loc 1 65 7 is_stmt 0 view .LVU37
 106 003e 01A9     		add	r1, sp, #4
 107 0040 0648     		ldr	r0, .L7
ARM GAS  /tmp/ccR61E3J.s 			page 4


 108 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 109              	.LVL2:
 110              		.loc 1 65 6 view .LVU38
 111 0046 28B9     		cbnz	r0, .L6
 112              	.L1:
  66:Core/Src/tim.c ****   {
  67:Core/Src/tim.c ****     Error_Handler();
  68:Core/Src/tim.c ****   }
  69:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_Init 2 */
  70:Core/Src/tim.c **** 
  71:Core/Src/tim.c ****   /* USER CODE END TIM3_Init 2 */
  72:Core/Src/tim.c **** 
  73:Core/Src/tim.c **** }
 113              		.loc 1 73 1 view .LVU39
 114 0048 0DB0     		add	sp, sp, #52
 115              	.LCFI2:
 116              		.cfi_remember_state
 117              		.cfi_def_cfa_offset 4
 118              		@ sp needed
 119 004a 5DF804FB 		ldr	pc, [sp], #4
 120              	.L5:
 121              	.LCFI3:
 122              		.cfi_restore_state
  61:Core/Src/tim.c ****   }
 123              		.loc 1 61 5 is_stmt 1 view .LVU40
 124 004e FFF7FEFF 		bl	Error_Handler
 125              	.LVL3:
 126 0052 F1E7     		b	.L2
 127              	.L6:
  67:Core/Src/tim.c ****   }
 128              		.loc 1 67 5 view .LVU41
 129 0054 FFF7FEFF 		bl	Error_Handler
 130              	.LVL4:
 131              		.loc 1 73 1 is_stmt 0 view .LVU42
 132 0058 F6E7     		b	.L1
 133              	.L8:
 134 005a 00BF     		.align	2
 135              	.L7:
 136 005c 00000000 		.word	.LANCHOR0
 137 0060 00040040 		.word	1073742848
 138              		.cfi_endproc
 139              	.LFE130:
 141              		.section	.text.HAL_TIM_Encoder_MspInit,"ax",%progbits
 142              		.align	1
 143              		.global	HAL_TIM_Encoder_MspInit
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 148              	HAL_TIM_Encoder_MspInit:
 149              	.LVL5:
 150              	.LFB132:
  74:Core/Src/tim.c **** /* TIM8 init function */
  75:Core/Src/tim.c **** void MX_TIM8_Init(void)
  76:Core/Src/tim.c **** {
  77:Core/Src/tim.c **** 
  78:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_Init 0 */
  79:Core/Src/tim.c **** 
ARM GAS  /tmp/ccR61E3J.s 			page 5


  80:Core/Src/tim.c ****   /* USER CODE END TIM8_Init 0 */
  81:Core/Src/tim.c **** 
  82:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  83:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  84:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  85:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  86:Core/Src/tim.c **** 
  87:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_Init 1 */
  88:Core/Src/tim.c **** 
  89:Core/Src/tim.c ****   /* USER CODE END TIM8_Init 1 */
  90:Core/Src/tim.c ****   htim8.Instance = TIM8;
  91:Core/Src/tim.c ****   htim8.Init.Prescaler = 24-1;
  92:Core/Src/tim.c ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  93:Core/Src/tim.c ****   htim8.Init.Period = 1000-1;
  94:Core/Src/tim.c ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  95:Core/Src/tim.c ****   htim8.Init.RepetitionCounter = 0;
  96:Core/Src/tim.c ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
  97:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
  98:Core/Src/tim.c ****   {
  99:Core/Src/tim.c ****     Error_Handler();
 100:Core/Src/tim.c ****   }
 101:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 102:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 103:Core/Src/tim.c ****   {
 104:Core/Src/tim.c ****     Error_Handler();
 105:Core/Src/tim.c ****   }
 106:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 107:Core/Src/tim.c ****   {
 108:Core/Src/tim.c ****     Error_Handler();
 109:Core/Src/tim.c ****   }
 110:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 111:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 112:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 113:Core/Src/tim.c ****   {
 114:Core/Src/tim.c ****     Error_Handler();
 115:Core/Src/tim.c ****   }
 116:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 117:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 118:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 119:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 120:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 121:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 122:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 123:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 124:Core/Src/tim.c ****   {
 125:Core/Src/tim.c ****     Error_Handler();
 126:Core/Src/tim.c ****   }
 127:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 128:Core/Src/tim.c ****   {
 129:Core/Src/tim.c ****     Error_Handler();
 130:Core/Src/tim.c ****   }
 131:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 132:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 133:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 134:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 135:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 136:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
ARM GAS  /tmp/ccR61E3J.s 			page 6


 137:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 138:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 139:Core/Src/tim.c ****   {
 140:Core/Src/tim.c ****     Error_Handler();
 141:Core/Src/tim.c ****   }
 142:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_Init 2 */
 143:Core/Src/tim.c **** 
 144:Core/Src/tim.c ****   /* USER CODE END TIM8_Init 2 */
 145:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim8);
 146:Core/Src/tim.c **** 
 147:Core/Src/tim.c **** }
 148:Core/Src/tim.c **** 
 149:Core/Src/tim.c **** void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
 150:Core/Src/tim.c **** {
 151              		.loc 1 150 1 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 32
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		.loc 1 150 1 is_stmt 0 view .LVU44
 156 0000 00B5     		push	{lr}
 157              	.LCFI4:
 158              		.cfi_def_cfa_offset 4
 159              		.cfi_offset 14, -4
 160 0002 89B0     		sub	sp, sp, #36
 161              	.LCFI5:
 162              		.cfi_def_cfa_offset 40
 151:Core/Src/tim.c **** 
 152:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 163              		.loc 1 152 3 is_stmt 1 view .LVU45
 164              		.loc 1 152 20 is_stmt 0 view .LVU46
 165 0004 0023     		movs	r3, #0
 166 0006 0393     		str	r3, [sp, #12]
 167 0008 0493     		str	r3, [sp, #16]
 168 000a 0593     		str	r3, [sp, #20]
 169 000c 0693     		str	r3, [sp, #24]
 170 000e 0793     		str	r3, [sp, #28]
 153:Core/Src/tim.c ****   if(tim_encoderHandle->Instance==TIM3)
 171              		.loc 1 153 3 is_stmt 1 view .LVU47
 172              		.loc 1 153 23 is_stmt 0 view .LVU48
 173 0010 0268     		ldr	r2, [r0]
 174              		.loc 1 153 5 view .LVU49
 175 0012 144B     		ldr	r3, .L13
 176 0014 9A42     		cmp	r2, r3
 177 0016 02D0     		beq	.L12
 178              	.LVL6:
 179              	.L9:
 154:Core/Src/tim.c ****   {
 155:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 156:Core/Src/tim.c **** 
 157:Core/Src/tim.c ****   /* USER CODE END TIM3_MspInit 0 */
 158:Core/Src/tim.c ****     /* TIM3 clock enable */
 159:Core/Src/tim.c ****     __HAL_RCC_TIM3_CLK_ENABLE();
 160:Core/Src/tim.c **** 
 161:Core/Src/tim.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 162:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 163:Core/Src/tim.c ****     PA6     ------> TIM3_CH1
 164:Core/Src/tim.c ****     PA7     ------> TIM3_CH2
ARM GAS  /tmp/ccR61E3J.s 			page 7


 165:Core/Src/tim.c ****     */
 166:Core/Src/tim.c ****     GPIO_InitStruct.Pin = MTR1_ENC_A__Pin|MTR1_ENC_B__Pin;
 167:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 168:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 169:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 170:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 171:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 172:Core/Src/tim.c **** 
 173:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 174:Core/Src/tim.c **** 
 175:Core/Src/tim.c ****   /* USER CODE END TIM3_MspInit 1 */
 176:Core/Src/tim.c ****   }
 177:Core/Src/tim.c **** }
 180              		.loc 1 177 1 view .LVU50
 181 0018 09B0     		add	sp, sp, #36
 182              	.LCFI6:
 183              		.cfi_remember_state
 184              		.cfi_def_cfa_offset 4
 185              		@ sp needed
 186 001a 5DF804FB 		ldr	pc, [sp], #4
 187              	.LVL7:
 188              	.L12:
 189              	.LCFI7:
 190              		.cfi_restore_state
 159:Core/Src/tim.c **** 
 191              		.loc 1 159 5 is_stmt 1 view .LVU51
 192              	.LBB2:
 159:Core/Src/tim.c **** 
 193              		.loc 1 159 5 view .LVU52
 194 001e 0021     		movs	r1, #0
 195 0020 0191     		str	r1, [sp, #4]
 159:Core/Src/tim.c **** 
 196              		.loc 1 159 5 view .LVU53
 197 0022 03F50D33 		add	r3, r3, #144384
 198 0026 1A6C     		ldr	r2, [r3, #64]
 199 0028 42F00202 		orr	r2, r2, #2
 200 002c 1A64     		str	r2, [r3, #64]
 159:Core/Src/tim.c **** 
 201              		.loc 1 159 5 view .LVU54
 202 002e 1A6C     		ldr	r2, [r3, #64]
 203 0030 02F00202 		and	r2, r2, #2
 204 0034 0192     		str	r2, [sp, #4]
 159:Core/Src/tim.c **** 
 205              		.loc 1 159 5 view .LVU55
 206 0036 019A     		ldr	r2, [sp, #4]
 207              	.LBE2:
 159:Core/Src/tim.c **** 
 208              		.loc 1 159 5 view .LVU56
 161:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 209              		.loc 1 161 5 view .LVU57
 210              	.LBB3:
 161:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 211              		.loc 1 161 5 view .LVU58
 212 0038 0291     		str	r1, [sp, #8]
 161:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 213              		.loc 1 161 5 view .LVU59
 214 003a 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccR61E3J.s 			page 8


 215 003c 42F00102 		orr	r2, r2, #1
 216 0040 1A63     		str	r2, [r3, #48]
 161:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 217              		.loc 1 161 5 view .LVU60
 218 0042 1B6B     		ldr	r3, [r3, #48]
 219 0044 03F00103 		and	r3, r3, #1
 220 0048 0293     		str	r3, [sp, #8]
 161:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 221              		.loc 1 161 5 view .LVU61
 222 004a 029B     		ldr	r3, [sp, #8]
 223              	.LBE3:
 161:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 224              		.loc 1 161 5 view .LVU62
 166:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 225              		.loc 1 166 5 view .LVU63
 166:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 226              		.loc 1 166 25 is_stmt 0 view .LVU64
 227 004c C023     		movs	r3, #192
 228 004e 0393     		str	r3, [sp, #12]
 167:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 229              		.loc 1 167 5 is_stmt 1 view .LVU65
 167:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 230              		.loc 1 167 26 is_stmt 0 view .LVU66
 231 0050 0223     		movs	r3, #2
 232 0052 0493     		str	r3, [sp, #16]
 168:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 233              		.loc 1 168 5 is_stmt 1 view .LVU67
 168:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 234              		.loc 1 168 26 is_stmt 0 view .LVU68
 235 0054 0122     		movs	r2, #1
 236 0056 0592     		str	r2, [sp, #20]
 169:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 237              		.loc 1 169 5 is_stmt 1 view .LVU69
 170:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 238              		.loc 1 170 5 view .LVU70
 170:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 239              		.loc 1 170 31 is_stmt 0 view .LVU71
 240 0058 0793     		str	r3, [sp, #28]
 171:Core/Src/tim.c **** 
 241              		.loc 1 171 5 is_stmt 1 view .LVU72
 242 005a 03A9     		add	r1, sp, #12
 243 005c 0248     		ldr	r0, .L13+4
 244              	.LVL8:
 171:Core/Src/tim.c **** 
 245              		.loc 1 171 5 is_stmt 0 view .LVU73
 246 005e FFF7FEFF 		bl	HAL_GPIO_Init
 247              	.LVL9:
 248              		.loc 1 177 1 view .LVU74
 249 0062 D9E7     		b	.L9
 250              	.L14:
 251              		.align	2
 252              	.L13:
 253 0064 00040040 		.word	1073742848
 254 0068 00000240 		.word	1073872896
 255              		.cfi_endproc
 256              	.LFE132:
 258              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
ARM GAS  /tmp/ccR61E3J.s 			page 9


 259              		.align	1
 260              		.global	HAL_TIM_Base_MspInit
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 265              	HAL_TIM_Base_MspInit:
 266              	.LVL10:
 267              	.LFB133:
 178:Core/Src/tim.c **** 
 179:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 180:Core/Src/tim.c **** {
 268              		.loc 1 180 1 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 8
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 181:Core/Src/tim.c **** 
 182:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM8)
 273              		.loc 1 182 3 view .LVU76
 274              		.loc 1 182 20 is_stmt 0 view .LVU77
 275 0000 0268     		ldr	r2, [r0]
 276              		.loc 1 182 5 view .LVU78
 277 0002 094B     		ldr	r3, .L22
 278 0004 9A42     		cmp	r2, r3
 279 0006 00D0     		beq	.L21
 280 0008 7047     		bx	lr
 281              	.L21:
 180:Core/Src/tim.c **** 
 282              		.loc 1 180 1 view .LVU79
 283 000a 82B0     		sub	sp, sp, #8
 284              	.LCFI8:
 285              		.cfi_def_cfa_offset 8
 183:Core/Src/tim.c ****   {
 184:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 0 */
 185:Core/Src/tim.c **** 
 186:Core/Src/tim.c ****   /* USER CODE END TIM8_MspInit 0 */
 187:Core/Src/tim.c ****     /* TIM8 clock enable */
 188:Core/Src/tim.c ****     __HAL_RCC_TIM8_CLK_ENABLE();
 286              		.loc 1 188 5 is_stmt 1 view .LVU80
 287              	.LBB4:
 288              		.loc 1 188 5 view .LVU81
 289 000c 0023     		movs	r3, #0
 290 000e 0193     		str	r3, [sp, #4]
 291              		.loc 1 188 5 view .LVU82
 292 0010 064B     		ldr	r3, .L22+4
 293 0012 5A6C     		ldr	r2, [r3, #68]
 294 0014 42F00202 		orr	r2, r2, #2
 295 0018 5A64     		str	r2, [r3, #68]
 296              		.loc 1 188 5 view .LVU83
 297 001a 5B6C     		ldr	r3, [r3, #68]
 298 001c 03F00203 		and	r3, r3, #2
 299 0020 0193     		str	r3, [sp, #4]
 300              		.loc 1 188 5 view .LVU84
 301 0022 019B     		ldr	r3, [sp, #4]
 302              	.LBE4:
 303              		.loc 1 188 5 view .LVU85
 189:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 1 */
ARM GAS  /tmp/ccR61E3J.s 			page 10


 190:Core/Src/tim.c **** 
 191:Core/Src/tim.c ****   /* USER CODE END TIM8_MspInit 1 */
 192:Core/Src/tim.c ****   }
 193:Core/Src/tim.c **** }
 304              		.loc 1 193 1 is_stmt 0 view .LVU86
 305 0024 02B0     		add	sp, sp, #8
 306              	.LCFI9:
 307              		.cfi_def_cfa_offset 0
 308              		@ sp needed
 309 0026 7047     		bx	lr
 310              	.L23:
 311              		.align	2
 312              	.L22:
 313 0028 00040140 		.word	1073808384
 314 002c 00380240 		.word	1073887232
 315              		.cfi_endproc
 316              	.LFE133:
 318              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 319              		.align	1
 320              		.global	HAL_TIM_MspPostInit
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 325              	HAL_TIM_MspPostInit:
 326              	.LVL11:
 327              	.LFB134:
 194:Core/Src/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 195:Core/Src/tim.c **** {
 328              		.loc 1 195 1 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 24
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		.loc 1 195 1 is_stmt 0 view .LVU88
 333 0000 00B5     		push	{lr}
 334              	.LCFI10:
 335              		.cfi_def_cfa_offset 4
 336              		.cfi_offset 14, -4
 337 0002 87B0     		sub	sp, sp, #28
 338              	.LCFI11:
 339              		.cfi_def_cfa_offset 32
 196:Core/Src/tim.c **** 
 197:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 340              		.loc 1 197 3 is_stmt 1 view .LVU89
 341              		.loc 1 197 20 is_stmt 0 view .LVU90
 342 0004 0023     		movs	r3, #0
 343 0006 0193     		str	r3, [sp, #4]
 344 0008 0293     		str	r3, [sp, #8]
 345 000a 0393     		str	r3, [sp, #12]
 346 000c 0493     		str	r3, [sp, #16]
 347 000e 0593     		str	r3, [sp, #20]
 198:Core/Src/tim.c ****   if(timHandle->Instance==TIM8)
 348              		.loc 1 198 3 is_stmt 1 view .LVU91
 349              		.loc 1 198 15 is_stmt 0 view .LVU92
 350 0010 0268     		ldr	r2, [r0]
 351              		.loc 1 198 5 view .LVU93
 352 0012 03F18043 		add	r3, r3, #1073741824
 353 0016 03F58233 		add	r3, r3, #66560
ARM GAS  /tmp/ccR61E3J.s 			page 11


 354 001a 9A42     		cmp	r2, r3
 355 001c 02D0     		beq	.L27
 356              	.LVL12:
 357              	.L24:
 199:Core/Src/tim.c ****   {
 200:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspPostInit 0 */
 201:Core/Src/tim.c **** 
 202:Core/Src/tim.c ****   /* USER CODE END TIM8_MspPostInit 0 */
 203:Core/Src/tim.c **** 
 204:Core/Src/tim.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 205:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
 206:Core/Src/tim.c ****     PC6     ------> TIM8_CH1
 207:Core/Src/tim.c ****     PC7     ------> TIM8_CH2
 208:Core/Src/tim.c ****     */
 209:Core/Src/tim.c ****     GPIO_InitStruct.Pin = MTR1_LPWM_Pin|MTR1_RPWM_Pin;
 210:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 211:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 212:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 213:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 214:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 215:Core/Src/tim.c **** 
 216:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspPostInit 1 */
 217:Core/Src/tim.c **** 
 218:Core/Src/tim.c ****   /* USER CODE END TIM8_MspPostInit 1 */
 219:Core/Src/tim.c ****   }
 220:Core/Src/tim.c **** 
 221:Core/Src/tim.c **** }
 358              		.loc 1 221 1 view .LVU94
 359 001e 07B0     		add	sp, sp, #28
 360              	.LCFI12:
 361              		.cfi_remember_state
 362              		.cfi_def_cfa_offset 4
 363              		@ sp needed
 364 0020 5DF804FB 		ldr	pc, [sp], #4
 365              	.LVL13:
 366              	.L27:
 367              	.LCFI13:
 368              		.cfi_restore_state
 204:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
 369              		.loc 1 204 5 is_stmt 1 view .LVU95
 370              	.LBB5:
 204:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
 371              		.loc 1 204 5 view .LVU96
 372 0024 0023     		movs	r3, #0
 373 0026 0093     		str	r3, [sp]
 204:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
 374              		.loc 1 204 5 view .LVU97
 375 0028 0A4B     		ldr	r3, .L28
 376 002a 1A6B     		ldr	r2, [r3, #48]
 377 002c 42F00402 		orr	r2, r2, #4
 378 0030 1A63     		str	r2, [r3, #48]
 204:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
 379              		.loc 1 204 5 view .LVU98
 380 0032 1B6B     		ldr	r3, [r3, #48]
 381 0034 03F00403 		and	r3, r3, #4
 382 0038 0093     		str	r3, [sp]
 204:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
ARM GAS  /tmp/ccR61E3J.s 			page 12


 383              		.loc 1 204 5 view .LVU99
 384 003a 009B     		ldr	r3, [sp]
 385              	.LBE5:
 204:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
 386              		.loc 1 204 5 view .LVU100
 209:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 387              		.loc 1 209 5 view .LVU101
 209:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 388              		.loc 1 209 25 is_stmt 0 view .LVU102
 389 003c C023     		movs	r3, #192
 390 003e 0193     		str	r3, [sp, #4]
 210:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 391              		.loc 1 210 5 is_stmt 1 view .LVU103
 210:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 392              		.loc 1 210 26 is_stmt 0 view .LVU104
 393 0040 0223     		movs	r3, #2
 394 0042 0293     		str	r3, [sp, #8]
 211:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 395              		.loc 1 211 5 is_stmt 1 view .LVU105
 212:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 396              		.loc 1 212 5 view .LVU106
 213:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 397              		.loc 1 213 5 view .LVU107
 213:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 398              		.loc 1 213 31 is_stmt 0 view .LVU108
 399 0044 0323     		movs	r3, #3
 400 0046 0593     		str	r3, [sp, #20]
 214:Core/Src/tim.c **** 
 401              		.loc 1 214 5 is_stmt 1 view .LVU109
 402 0048 01A9     		add	r1, sp, #4
 403 004a 0348     		ldr	r0, .L28+4
 404              	.LVL14:
 214:Core/Src/tim.c **** 
 405              		.loc 1 214 5 is_stmt 0 view .LVU110
 406 004c FFF7FEFF 		bl	HAL_GPIO_Init
 407              	.LVL15:
 408              		.loc 1 221 1 view .LVU111
 409 0050 E5E7     		b	.L24
 410              	.L29:
 411 0052 00BF     		.align	2
 412              	.L28:
 413 0054 00380240 		.word	1073887232
 414 0058 00080240 		.word	1073874944
 415              		.cfi_endproc
 416              	.LFE134:
 418              		.section	.text.MX_TIM8_Init,"ax",%progbits
 419              		.align	1
 420              		.global	MX_TIM8_Init
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 425              	MX_TIM8_Init:
 426              	.LFB131:
  76:Core/Src/tim.c **** 
 427              		.loc 1 76 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 88
ARM GAS  /tmp/ccR61E3J.s 			page 13


 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431 0000 10B5     		push	{r4, lr}
 432              	.LCFI14:
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 4, -8
 435              		.cfi_offset 14, -4
 436 0002 96B0     		sub	sp, sp, #88
 437              	.LCFI15:
 438              		.cfi_def_cfa_offset 96
  82:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 439              		.loc 1 82 3 view .LVU113
  82:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 440              		.loc 1 82 26 is_stmt 0 view .LVU114
 441 0004 0024     		movs	r4, #0
 442 0006 1294     		str	r4, [sp, #72]
 443 0008 1394     		str	r4, [sp, #76]
 444 000a 1494     		str	r4, [sp, #80]
 445 000c 1594     		str	r4, [sp, #84]
  83:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 446              		.loc 1 83 3 is_stmt 1 view .LVU115
  83:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 447              		.loc 1 83 27 is_stmt 0 view .LVU116
 448 000e 1094     		str	r4, [sp, #64]
 449 0010 1194     		str	r4, [sp, #68]
  84:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 450              		.loc 1 84 3 is_stmt 1 view .LVU117
  84:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 451              		.loc 1 84 22 is_stmt 0 view .LVU118
 452 0012 0994     		str	r4, [sp, #36]
 453 0014 0A94     		str	r4, [sp, #40]
 454 0016 0B94     		str	r4, [sp, #44]
 455 0018 0C94     		str	r4, [sp, #48]
 456 001a 0D94     		str	r4, [sp, #52]
 457 001c 0E94     		str	r4, [sp, #56]
 458 001e 0F94     		str	r4, [sp, #60]
  85:Core/Src/tim.c **** 
 459              		.loc 1 85 3 is_stmt 1 view .LVU119
  85:Core/Src/tim.c **** 
 460              		.loc 1 85 34 is_stmt 0 view .LVU120
 461 0020 2022     		movs	r2, #32
 462 0022 2146     		mov	r1, r4
 463 0024 01A8     		add	r0, sp, #4
 464 0026 FFF7FEFF 		bl	memset
 465              	.LVL16:
  90:Core/Src/tim.c ****   htim8.Init.Prescaler = 24-1;
 466              		.loc 1 90 3 is_stmt 1 view .LVU121
  90:Core/Src/tim.c ****   htim8.Init.Prescaler = 24-1;
 467              		.loc 1 90 18 is_stmt 0 view .LVU122
 468 002a 3248     		ldr	r0, .L46
 469 002c 324B     		ldr	r3, .L46+4
 470 002e 0360     		str	r3, [r0]
  91:Core/Src/tim.c ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 471              		.loc 1 91 3 is_stmt 1 view .LVU123
  91:Core/Src/tim.c ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 472              		.loc 1 91 24 is_stmt 0 view .LVU124
 473 0030 1723     		movs	r3, #23
 474 0032 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/ccR61E3J.s 			page 14


  92:Core/Src/tim.c ****   htim8.Init.Period = 1000-1;
 475              		.loc 1 92 3 is_stmt 1 view .LVU125
  92:Core/Src/tim.c ****   htim8.Init.Period = 1000-1;
 476              		.loc 1 92 26 is_stmt 0 view .LVU126
 477 0034 8460     		str	r4, [r0, #8]
  93:Core/Src/tim.c ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 478              		.loc 1 93 3 is_stmt 1 view .LVU127
  93:Core/Src/tim.c ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 479              		.loc 1 93 21 is_stmt 0 view .LVU128
 480 0036 40F2E733 		movw	r3, #999
 481 003a C360     		str	r3, [r0, #12]
  94:Core/Src/tim.c ****   htim8.Init.RepetitionCounter = 0;
 482              		.loc 1 94 3 is_stmt 1 view .LVU129
  94:Core/Src/tim.c ****   htim8.Init.RepetitionCounter = 0;
 483              		.loc 1 94 28 is_stmt 0 view .LVU130
 484 003c 0461     		str	r4, [r0, #16]
  95:Core/Src/tim.c ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 485              		.loc 1 95 3 is_stmt 1 view .LVU131
  95:Core/Src/tim.c ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 486              		.loc 1 95 32 is_stmt 0 view .LVU132
 487 003e 4461     		str	r4, [r0, #20]
  96:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 488              		.loc 1 96 3 is_stmt 1 view .LVU133
  96:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 489              		.loc 1 96 32 is_stmt 0 view .LVU134
 490 0040 8023     		movs	r3, #128
 491 0042 8361     		str	r3, [r0, #24]
  97:Core/Src/tim.c ****   {
 492              		.loc 1 97 3 is_stmt 1 view .LVU135
  97:Core/Src/tim.c ****   {
 493              		.loc 1 97 7 is_stmt 0 view .LVU136
 494 0044 FFF7FEFF 		bl	HAL_TIM_Base_Init
 495              	.LVL17:
  97:Core/Src/tim.c ****   {
 496              		.loc 1 97 6 view .LVU137
 497 0048 0028     		cmp	r0, #0
 498 004a 3ED1     		bne	.L39
 499              	.L31:
 101:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 500              		.loc 1 101 3 is_stmt 1 view .LVU138
 101:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 501              		.loc 1 101 34 is_stmt 0 view .LVU139
 502 004c 4FF48053 		mov	r3, #4096
 503 0050 1293     		str	r3, [sp, #72]
 102:Core/Src/tim.c ****   {
 504              		.loc 1 102 3 is_stmt 1 view .LVU140
 102:Core/Src/tim.c ****   {
 505              		.loc 1 102 7 is_stmt 0 view .LVU141
 506 0052 12A9     		add	r1, sp, #72
 507 0054 2748     		ldr	r0, .L46
 508 0056 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 509              	.LVL18:
 102:Core/Src/tim.c ****   {
 510              		.loc 1 102 6 view .LVU142
 511 005a 0028     		cmp	r0, #0
 512 005c 38D1     		bne	.L40
 513              	.L32:
ARM GAS  /tmp/ccR61E3J.s 			page 15


 106:Core/Src/tim.c ****   {
 514              		.loc 1 106 3 is_stmt 1 view .LVU143
 106:Core/Src/tim.c ****   {
 515              		.loc 1 106 7 is_stmt 0 view .LVU144
 516 005e 2548     		ldr	r0, .L46
 517 0060 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 518              	.LVL19:
 106:Core/Src/tim.c ****   {
 519              		.loc 1 106 6 view .LVU145
 520 0064 0028     		cmp	r0, #0
 521 0066 36D1     		bne	.L41
 522              	.L33:
 110:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 523              		.loc 1 110 3 is_stmt 1 view .LVU146
 110:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 524              		.loc 1 110 37 is_stmt 0 view .LVU147
 525 0068 0023     		movs	r3, #0
 526 006a 1093     		str	r3, [sp, #64]
 111:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 527              		.loc 1 111 3 is_stmt 1 view .LVU148
 111:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 528              		.loc 1 111 33 is_stmt 0 view .LVU149
 529 006c 1193     		str	r3, [sp, #68]
 112:Core/Src/tim.c ****   {
 530              		.loc 1 112 3 is_stmt 1 view .LVU150
 112:Core/Src/tim.c ****   {
 531              		.loc 1 112 7 is_stmt 0 view .LVU151
 532 006e 10A9     		add	r1, sp, #64
 533 0070 2048     		ldr	r0, .L46
 534 0072 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 535              	.LVL20:
 112:Core/Src/tim.c ****   {
 536              		.loc 1 112 6 view .LVU152
 537 0076 0028     		cmp	r0, #0
 538 0078 30D1     		bne	.L42
 539              	.L34:
 116:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 540              		.loc 1 116 3 is_stmt 1 view .LVU153
 116:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 541              		.loc 1 116 20 is_stmt 0 view .LVU154
 542 007a 6023     		movs	r3, #96
 543 007c 0993     		str	r3, [sp, #36]
 117:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 544              		.loc 1 117 3 is_stmt 1 view .LVU155
 117:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 545              		.loc 1 117 19 is_stmt 0 view .LVU156
 546 007e 0022     		movs	r2, #0
 547 0080 0A92     		str	r2, [sp, #40]
 118:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 548              		.loc 1 118 3 is_stmt 1 view .LVU157
 118:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 549              		.loc 1 118 24 is_stmt 0 view .LVU158
 550 0082 0B92     		str	r2, [sp, #44]
 119:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 551              		.loc 1 119 3 is_stmt 1 view .LVU159
 119:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 552              		.loc 1 119 25 is_stmt 0 view .LVU160
ARM GAS  /tmp/ccR61E3J.s 			page 16


 553 0084 0C92     		str	r2, [sp, #48]
 120:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 554              		.loc 1 120 3 is_stmt 1 view .LVU161
 120:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 555              		.loc 1 120 24 is_stmt 0 view .LVU162
 556 0086 0D92     		str	r2, [sp, #52]
 121:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 557              		.loc 1 121 3 is_stmt 1 view .LVU163
 121:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 558              		.loc 1 121 25 is_stmt 0 view .LVU164
 559 0088 0E92     		str	r2, [sp, #56]
 122:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 560              		.loc 1 122 3 is_stmt 1 view .LVU165
 122:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 561              		.loc 1 122 26 is_stmt 0 view .LVU166
 562 008a 0F92     		str	r2, [sp, #60]
 123:Core/Src/tim.c ****   {
 563              		.loc 1 123 3 is_stmt 1 view .LVU167
 123:Core/Src/tim.c ****   {
 564              		.loc 1 123 7 is_stmt 0 view .LVU168
 565 008c 09A9     		add	r1, sp, #36
 566 008e 1948     		ldr	r0, .L46
 567 0090 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 568              	.LVL21:
 123:Core/Src/tim.c ****   {
 569              		.loc 1 123 6 view .LVU169
 570 0094 28BB     		cbnz	r0, .L43
 571              	.L35:
 127:Core/Src/tim.c ****   {
 572              		.loc 1 127 3 is_stmt 1 view .LVU170
 127:Core/Src/tim.c ****   {
 573              		.loc 1 127 7 is_stmt 0 view .LVU171
 574 0096 0422     		movs	r2, #4
 575 0098 09A9     		add	r1, sp, #36
 576 009a 1648     		ldr	r0, .L46
 577 009c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 578              	.LVL22:
 127:Core/Src/tim.c ****   {
 579              		.loc 1 127 6 view .LVU172
 580 00a0 10BB     		cbnz	r0, .L44
 581              	.L36:
 131:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 582              		.loc 1 131 3 is_stmt 1 view .LVU173
 131:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 583              		.loc 1 131 40 is_stmt 0 view .LVU174
 584 00a2 0023     		movs	r3, #0
 585 00a4 0193     		str	r3, [sp, #4]
 132:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 586              		.loc 1 132 3 is_stmt 1 view .LVU175
 132:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 587              		.loc 1 132 41 is_stmt 0 view .LVU176
 588 00a6 0293     		str	r3, [sp, #8]
 133:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 589              		.loc 1 133 3 is_stmt 1 view .LVU177
 133:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 590              		.loc 1 133 34 is_stmt 0 view .LVU178
 591 00a8 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/ccR61E3J.s 			page 17


 134:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 592              		.loc 1 134 3 is_stmt 1 view .LVU179
 134:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 593              		.loc 1 134 33 is_stmt 0 view .LVU180
 594 00aa 0493     		str	r3, [sp, #16]
 135:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 595              		.loc 1 135 3 is_stmt 1 view .LVU181
 135:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 596              		.loc 1 135 35 is_stmt 0 view .LVU182
 597 00ac 0593     		str	r3, [sp, #20]
 136:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 598              		.loc 1 136 3 is_stmt 1 view .LVU183
 136:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 599              		.loc 1 136 38 is_stmt 0 view .LVU184
 600 00ae 4FF40052 		mov	r2, #8192
 601 00b2 0692     		str	r2, [sp, #24]
 137:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 602              		.loc 1 137 3 is_stmt 1 view .LVU185
 137:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 603              		.loc 1 137 40 is_stmt 0 view .LVU186
 604 00b4 0893     		str	r3, [sp, #32]
 138:Core/Src/tim.c ****   {
 605              		.loc 1 138 3 is_stmt 1 view .LVU187
 138:Core/Src/tim.c ****   {
 606              		.loc 1 138 7 is_stmt 0 view .LVU188
 607 00b6 01A9     		add	r1, sp, #4
 608 00b8 0E48     		ldr	r0, .L46
 609 00ba FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 610              	.LVL23:
 138:Core/Src/tim.c ****   {
 611              		.loc 1 138 6 view .LVU189
 612 00be B0B9     		cbnz	r0, .L45
 613              	.L37:
 145:Core/Src/tim.c **** 
 614              		.loc 1 145 3 is_stmt 1 view .LVU190
 615 00c0 0C48     		ldr	r0, .L46
 616 00c2 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 617              	.LVL24:
 147:Core/Src/tim.c **** 
 618              		.loc 1 147 1 is_stmt 0 view .LVU191
 619 00c6 16B0     		add	sp, sp, #88
 620              	.LCFI16:
 621              		.cfi_remember_state
 622              		.cfi_def_cfa_offset 8
 623              		@ sp needed
 624 00c8 10BD     		pop	{r4, pc}
 625              	.L39:
 626              	.LCFI17:
 627              		.cfi_restore_state
  99:Core/Src/tim.c ****   }
 628              		.loc 1 99 5 is_stmt 1 view .LVU192
 629 00ca FFF7FEFF 		bl	Error_Handler
 630              	.LVL25:
 631 00ce BDE7     		b	.L31
 632              	.L40:
 104:Core/Src/tim.c ****   }
 633              		.loc 1 104 5 view .LVU193
ARM GAS  /tmp/ccR61E3J.s 			page 18


 634 00d0 FFF7FEFF 		bl	Error_Handler
 635              	.LVL26:
 636 00d4 C3E7     		b	.L32
 637              	.L41:
 108:Core/Src/tim.c ****   }
 638              		.loc 1 108 5 view .LVU194
 639 00d6 FFF7FEFF 		bl	Error_Handler
 640              	.LVL27:
 641 00da C5E7     		b	.L33
 642              	.L42:
 114:Core/Src/tim.c ****   }
 643              		.loc 1 114 5 view .LVU195
 644 00dc FFF7FEFF 		bl	Error_Handler
 645              	.LVL28:
 646 00e0 CBE7     		b	.L34
 647              	.L43:
 125:Core/Src/tim.c ****   }
 648              		.loc 1 125 5 view .LVU196
 649 00e2 FFF7FEFF 		bl	Error_Handler
 650              	.LVL29:
 651 00e6 D6E7     		b	.L35
 652              	.L44:
 129:Core/Src/tim.c ****   }
 653              		.loc 1 129 5 view .LVU197
 654 00e8 FFF7FEFF 		bl	Error_Handler
 655              	.LVL30:
 656 00ec D9E7     		b	.L36
 657              	.L45:
 140:Core/Src/tim.c ****   }
 658              		.loc 1 140 5 view .LVU198
 659 00ee FFF7FEFF 		bl	Error_Handler
 660              	.LVL31:
 661 00f2 E5E7     		b	.L37
 662              	.L47:
 663              		.align	2
 664              	.L46:
 665 00f4 00000000 		.word	.LANCHOR1
 666 00f8 00040140 		.word	1073808384
 667              		.cfi_endproc
 668              	.LFE131:
 670              		.section	.text.HAL_TIM_Encoder_MspDeInit,"ax",%progbits
 671              		.align	1
 672              		.global	HAL_TIM_Encoder_MspDeInit
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 677              	HAL_TIM_Encoder_MspDeInit:
 678              	.LVL32:
 679              	.LFB135:
 222:Core/Src/tim.c **** 
 223:Core/Src/tim.c **** void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef* tim_encoderHandle)
 224:Core/Src/tim.c **** {
 680              		.loc 1 224 1 view -0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              		.loc 1 224 1 is_stmt 0 view .LVU200
ARM GAS  /tmp/ccR61E3J.s 			page 19


 685 0000 08B5     		push	{r3, lr}
 686              	.LCFI18:
 687              		.cfi_def_cfa_offset 8
 688              		.cfi_offset 3, -8
 689              		.cfi_offset 14, -4
 225:Core/Src/tim.c **** 
 226:Core/Src/tim.c ****   if(tim_encoderHandle->Instance==TIM3)
 690              		.loc 1 226 3 is_stmt 1 view .LVU201
 691              		.loc 1 226 23 is_stmt 0 view .LVU202
 692 0002 0268     		ldr	r2, [r0]
 693              		.loc 1 226 5 view .LVU203
 694 0004 064B     		ldr	r3, .L52
 695 0006 9A42     		cmp	r2, r3
 696 0008 00D0     		beq	.L51
 697              	.LVL33:
 698              	.L48:
 227:Core/Src/tim.c ****   {
 228:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 229:Core/Src/tim.c **** 
 230:Core/Src/tim.c ****   /* USER CODE END TIM3_MspDeInit 0 */
 231:Core/Src/tim.c ****     /* Peripheral clock disable */
 232:Core/Src/tim.c ****     __HAL_RCC_TIM3_CLK_DISABLE();
 233:Core/Src/tim.c **** 
 234:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 235:Core/Src/tim.c ****     PA6     ------> TIM3_CH1
 236:Core/Src/tim.c ****     PA7     ------> TIM3_CH2
 237:Core/Src/tim.c ****     */
 238:Core/Src/tim.c ****     HAL_GPIO_DeInit(GPIOA, MTR1_ENC_A__Pin|MTR1_ENC_B__Pin);
 239:Core/Src/tim.c **** 
 240:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 241:Core/Src/tim.c **** 
 242:Core/Src/tim.c ****   /* USER CODE END TIM3_MspDeInit 1 */
 243:Core/Src/tim.c ****   }
 244:Core/Src/tim.c **** }
 699              		.loc 1 244 1 view .LVU204
 700 000a 08BD     		pop	{r3, pc}
 701              	.LVL34:
 702              	.L51:
 232:Core/Src/tim.c **** 
 703              		.loc 1 232 5 is_stmt 1 view .LVU205
 704 000c 054A     		ldr	r2, .L52+4
 705 000e 136C     		ldr	r3, [r2, #64]
 706 0010 23F00203 		bic	r3, r3, #2
 707 0014 1364     		str	r3, [r2, #64]
 238:Core/Src/tim.c **** 
 708              		.loc 1 238 5 view .LVU206
 709 0016 C021     		movs	r1, #192
 710 0018 0348     		ldr	r0, .L52+8
 711              	.LVL35:
 238:Core/Src/tim.c **** 
 712              		.loc 1 238 5 is_stmt 0 view .LVU207
 713 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 714              	.LVL36:
 715              		.loc 1 244 1 view .LVU208
 716 001e F4E7     		b	.L48
 717              	.L53:
 718              		.align	2
ARM GAS  /tmp/ccR61E3J.s 			page 20


 719              	.L52:
 720 0020 00040040 		.word	1073742848
 721 0024 00380240 		.word	1073887232
 722 0028 00000240 		.word	1073872896
 723              		.cfi_endproc
 724              	.LFE135:
 726              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 727              		.align	1
 728              		.global	HAL_TIM_Base_MspDeInit
 729              		.syntax unified
 730              		.thumb
 731              		.thumb_func
 733              	HAL_TIM_Base_MspDeInit:
 734              	.LVL37:
 735              	.LFB136:
 245:Core/Src/tim.c **** 
 246:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 247:Core/Src/tim.c **** {
 736              		.loc 1 247 1 is_stmt 1 view -0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740              		@ link register save eliminated.
 248:Core/Src/tim.c **** 
 249:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM8)
 741              		.loc 1 249 3 view .LVU210
 742              		.loc 1 249 20 is_stmt 0 view .LVU211
 743 0000 0268     		ldr	r2, [r0]
 744              		.loc 1 249 5 view .LVU212
 745 0002 054B     		ldr	r3, .L57
 746 0004 9A42     		cmp	r2, r3
 747 0006 00D0     		beq	.L56
 748              	.L54:
 250:Core/Src/tim.c ****   {
 251:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspDeInit 0 */
 252:Core/Src/tim.c **** 
 253:Core/Src/tim.c ****   /* USER CODE END TIM8_MspDeInit 0 */
 254:Core/Src/tim.c ****     /* Peripheral clock disable */
 255:Core/Src/tim.c ****     __HAL_RCC_TIM8_CLK_DISABLE();
 256:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspDeInit 1 */
 257:Core/Src/tim.c **** 
 258:Core/Src/tim.c ****   /* USER CODE END TIM8_MspDeInit 1 */
 259:Core/Src/tim.c ****   }
 260:Core/Src/tim.c **** }
 749              		.loc 1 260 1 view .LVU213
 750 0008 7047     		bx	lr
 751              	.L56:
 255:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspDeInit 1 */
 752              		.loc 1 255 5 is_stmt 1 view .LVU214
 753 000a 044A     		ldr	r2, .L57+4
 754 000c 536C     		ldr	r3, [r2, #68]
 755 000e 23F00203 		bic	r3, r3, #2
 756 0012 5364     		str	r3, [r2, #68]
 757              		.loc 1 260 1 is_stmt 0 view .LVU215
 758 0014 F8E7     		b	.L54
 759              	.L58:
 760 0016 00BF     		.align	2
ARM GAS  /tmp/ccR61E3J.s 			page 21


 761              	.L57:
 762 0018 00040140 		.word	1073808384
 763 001c 00380240 		.word	1073887232
 764              		.cfi_endproc
 765              	.LFE136:
 767              		.global	htim8
 768              		.global	htim3
 769              		.section	.bss.htim3,"aw",%nobits
 770              		.align	2
 771              		.set	.LANCHOR0,. + 0
 774              	htim3:
 775 0000 00000000 		.space	72
 775      00000000 
 775      00000000 
 775      00000000 
 775      00000000 
 776              		.section	.bss.htim8,"aw",%nobits
 777              		.align	2
 778              		.set	.LANCHOR1,. + 0
 781              	htim8:
 782 0000 00000000 		.space	72
 782      00000000 
 782      00000000 
 782      00000000 
 782      00000000 
 783              		.text
 784              	.Letext0:
 785              		.file 2 "/opt/gcc-arm/arm-none-eabi/include/machine/_default_types.h"
 786              		.file 3 "/opt/gcc-arm/arm-none-eabi/include/sys/_stdint.h"
 787              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
 788              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 789              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 790              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 791              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 792              		.file 9 "Core/Inc/tim.h"
 793              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 794              		.file 11 "Core/Inc/main.h"
 795              		.file 12 "<built-in>"
ARM GAS  /tmp/ccR61E3J.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccR61E3J.s:20     .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccR61E3J.s:26     .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccR61E3J.s:136    .text.MX_TIM3_Init:000000000000005c $d
     /tmp/ccR61E3J.s:142    .text.HAL_TIM_Encoder_MspInit:0000000000000000 $t
     /tmp/ccR61E3J.s:148    .text.HAL_TIM_Encoder_MspInit:0000000000000000 HAL_TIM_Encoder_MspInit
     /tmp/ccR61E3J.s:253    .text.HAL_TIM_Encoder_MspInit:0000000000000064 $d
     /tmp/ccR61E3J.s:259    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccR61E3J.s:265    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccR61E3J.s:313    .text.HAL_TIM_Base_MspInit:0000000000000028 $d
     /tmp/ccR61E3J.s:319    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccR61E3J.s:325    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccR61E3J.s:413    .text.HAL_TIM_MspPostInit:0000000000000054 $d
     /tmp/ccR61E3J.s:419    .text.MX_TIM8_Init:0000000000000000 $t
     /tmp/ccR61E3J.s:425    .text.MX_TIM8_Init:0000000000000000 MX_TIM8_Init
     /tmp/ccR61E3J.s:665    .text.MX_TIM8_Init:00000000000000f4 $d
     /tmp/ccR61E3J.s:671    .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 $t
     /tmp/ccR61E3J.s:677    .text.HAL_TIM_Encoder_MspDeInit:0000000000000000 HAL_TIM_Encoder_MspDeInit
     /tmp/ccR61E3J.s:720    .text.HAL_TIM_Encoder_MspDeInit:0000000000000020 $d
     /tmp/ccR61E3J.s:727    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccR61E3J.s:733    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccR61E3J.s:762    .text.HAL_TIM_Base_MspDeInit:0000000000000018 $d
     /tmp/ccR61E3J.s:781    .bss.htim8:0000000000000000 htim8
     /tmp/ccR61E3J.s:774    .bss.htim3:0000000000000000 htim3
     /tmp/ccR61E3J.s:770    .bss.htim3:0000000000000000 $d
     /tmp/ccR61E3J.s:777    .bss.htim8:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_TIM_Encoder_Init
HAL_TIMEx_MasterConfigSynchronization
Error_Handler
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_GPIO_DeInit
