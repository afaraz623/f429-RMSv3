ARM GAS  /tmp/ccML3V9q.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.start_uros_task,"ax",%progbits
  20              		.align	1
  21              		.weak	start_uros_task
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	start_uros_task:
  27              	.LFB135:
  28              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** 
  29:Core/Src/freertos.c **** /* USER CODE END Includes */
  30:Core/Src/freertos.c **** 
ARM GAS  /tmp/ccML3V9q.s 			page 2


  31:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/freertos.c **** typedef StaticTask_t osStaticThreadDef_t;
  33:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/freertos.c **** 
  35:Core/Src/freertos.c **** /* USER CODE END PTD */
  36:Core/Src/freertos.c **** 
  37:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  39:Core/Src/freertos.c **** 
  40:Core/Src/freertos.c **** /* USER CODE END PD */
  41:Core/Src/freertos.c **** 
  42:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  44:Core/Src/freertos.c **** 
  45:Core/Src/freertos.c **** /* USER CODE END PM */
  46:Core/Src/freertos.c **** 
  47:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  49:Core/Src/freertos.c **** 
  50:Core/Src/freertos.c **** /* USER CODE END Variables */
  51:Core/Src/freertos.c **** /* Definitions for uros_task */
  52:Core/Src/freertos.c **** osThreadId_t uros_taskHandle;
  53:Core/Src/freertos.c **** uint32_t uros_task_Buffer[ 3000 ];
  54:Core/Src/freertos.c **** osStaticThreadDef_t defaultTaskControlBlock;
  55:Core/Src/freertos.c **** const osThreadAttr_t uros_task_attributes = {
  56:Core/Src/freertos.c ****   .name = "uros_task",
  57:Core/Src/freertos.c ****   .cb_mem = &defaultTaskControlBlock,
  58:Core/Src/freertos.c ****   .cb_size = sizeof(defaultTaskControlBlock),
  59:Core/Src/freertos.c ****   .stack_mem = &uros_task_Buffer[0],
  60:Core/Src/freertos.c ****   .stack_size = sizeof(uros_task_Buffer),
  61:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
  62:Core/Src/freertos.c **** };
  63:Core/Src/freertos.c **** /* Definitions for motor_control */
  64:Core/Src/freertos.c **** osThreadId_t motor_controlHandle;
  65:Core/Src/freertos.c **** uint32_t motor_control_Buffer[ 1000 ];
  66:Core/Src/freertos.c **** osStaticThreadDef_t motor_control_tControlBlock;
  67:Core/Src/freertos.c **** const osThreadAttr_t motor_control_attributes = {
  68:Core/Src/freertos.c ****   .name = "motor_control",
  69:Core/Src/freertos.c ****   .cb_mem = &motor_control_tControlBlock,
  70:Core/Src/freertos.c ****   .cb_size = sizeof(motor_control_tControlBlock),
  71:Core/Src/freertos.c ****   .stack_mem = &motor_control_Buffer[0],
  72:Core/Src/freertos.c ****   .stack_size = sizeof(motor_control_Buffer),
  73:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityBelowNormal7,
  74:Core/Src/freertos.c **** };
  75:Core/Src/freertos.c **** 
  76:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  77:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  78:Core/Src/freertos.c **** 
  79:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  80:Core/Src/freertos.c **** 
  81:Core/Src/freertos.c **** void start_uros_task(void *argument);
  82:Core/Src/freertos.c **** void start_mtr_ctrl_task(void *argument);
  83:Core/Src/freertos.c **** 
  84:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  85:Core/Src/freertos.c **** 
  86:Core/Src/freertos.c **** /**
  87:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
ARM GAS  /tmp/ccML3V9q.s 			page 3


  88:Core/Src/freertos.c ****   * @param  None
  89:Core/Src/freertos.c ****   * @retval None
  90:Core/Src/freertos.c ****   */
  91:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  92:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  93:Core/Src/freertos.c **** 
  94:Core/Src/freertos.c ****   /* USER CODE END Init */
  95:Core/Src/freertos.c **** 
  96:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  97:Core/Src/freertos.c ****   /* add mutexes, ... */
  98:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  99:Core/Src/freertos.c **** 
 100:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 101:Core/Src/freertos.c ****   /* add semaphores, ... */
 102:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 103:Core/Src/freertos.c **** 
 104:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 105:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 106:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 107:Core/Src/freertos.c **** 
 108:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 109:Core/Src/freertos.c ****   /* add queues, ... */
 110:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 111:Core/Src/freertos.c **** 
 112:Core/Src/freertos.c ****   /* Create the thread(s) */
 113:Core/Src/freertos.c ****   /* creation of uros_task */
 114:Core/Src/freertos.c ****   uros_taskHandle = osThreadNew(start_uros_task, NULL, &uros_task_attributes);
 115:Core/Src/freertos.c **** 
 116:Core/Src/freertos.c ****   /* creation of motor_control */
 117:Core/Src/freertos.c ****   motor_controlHandle = osThreadNew(start_mtr_ctrl_task, NULL, &motor_control_attributes);
 118:Core/Src/freertos.c **** 
 119:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 120:Core/Src/freertos.c ****   /* add threads, ... */
 121:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 122:Core/Src/freertos.c **** 
 123:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 124:Core/Src/freertos.c ****   /* add events, ... */
 125:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 126:Core/Src/freertos.c **** 
 127:Core/Src/freertos.c **** }
 128:Core/Src/freertos.c **** 
 129:Core/Src/freertos.c **** /* USER CODE BEGIN Header_start_uros_task */
 130:Core/Src/freertos.c **** /**
 131:Core/Src/freertos.c ****   * @brief  Function implementing the uros_task thread.
 132:Core/Src/freertos.c ****   * @param  argument: Not used
 133:Core/Src/freertos.c ****   * @retval None
 134:Core/Src/freertos.c ****   */
 135:Core/Src/freertos.c **** /* USER CODE END Header_start_uros_task */
 136:Core/Src/freertos.c **** __weak void start_uros_task(void *argument)
 137:Core/Src/freertos.c **** {
  29              		.loc 1 137 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34              		.loc 1 137 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccML3V9q.s 			page 4


  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  40              	.LVL1:
  41              	.L2:
 138:Core/Src/freertos.c ****   /* USER CODE BEGIN start_uros_task */
 139:Core/Src/freertos.c ****   /* Infinite loop */
 140:Core/Src/freertos.c ****   for(;;)
  42              		.loc 1 140 3 is_stmt 1 discriminator 1 view .LVU2
 141:Core/Src/freertos.c ****   {
 142:Core/Src/freertos.c ****     osDelay(1);
  43              		.loc 1 142 5 discriminator 1 view .LVU3
  44 0002 0120     		movs	r0, #1
  45 0004 FFF7FEFF 		bl	osDelay
  46              	.LVL2:
 140:Core/Src/freertos.c ****   {
  47              		.loc 1 140 8 discriminator 1 view .LVU4
  48 0008 FBE7     		b	.L2
  49              		.cfi_endproc
  50              	.LFE135:
  52              		.section	.text.start_mtr_ctrl_task,"ax",%progbits
  53              		.align	1
  54              		.weak	start_mtr_ctrl_task
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  59              	start_mtr_ctrl_task:
  60              	.LFB136:
 143:Core/Src/freertos.c ****   }
 144:Core/Src/freertos.c ****   /* USER CODE END start_uros_task */
 145:Core/Src/freertos.c **** }
 146:Core/Src/freertos.c **** 
 147:Core/Src/freertos.c **** /* USER CODE BEGIN Header_start_mtr_ctrl_task */
 148:Core/Src/freertos.c **** /**
 149:Core/Src/freertos.c **** * @brief Function implementing the motor_control_t thread.
 150:Core/Src/freertos.c **** * @param argument: Not used
 151:Core/Src/freertos.c **** * @retval None
 152:Core/Src/freertos.c **** */
 153:Core/Src/freertos.c **** /* USER CODE END Header_start_mtr_ctrl_task */
 154:Core/Src/freertos.c **** __weak void start_mtr_ctrl_task(void *argument)
 155:Core/Src/freertos.c **** {
  61              		.loc 1 155 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              	.LVL3:
  66              		.loc 1 155 1 is_stmt 0 view .LVU6
  67 0000 08B5     		push	{r3, lr}
  68              	.LCFI1:
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 3, -8
  71              		.cfi_offset 14, -4
  72              	.LVL4:
  73              	.L5:
 156:Core/Src/freertos.c ****   /* USER CODE BEGIN start_mtr_ctrl_task */
 157:Core/Src/freertos.c ****   /* Infinite loop */
ARM GAS  /tmp/ccML3V9q.s 			page 5


 158:Core/Src/freertos.c ****   for(;;)
  74              		.loc 1 158 3 is_stmt 1 discriminator 1 view .LVU7
 159:Core/Src/freertos.c ****   {
 160:Core/Src/freertos.c ****     osDelay(1);
  75              		.loc 1 160 5 discriminator 1 view .LVU8
  76 0002 0120     		movs	r0, #1
  77 0004 FFF7FEFF 		bl	osDelay
  78              	.LVL5:
 158:Core/Src/freertos.c ****   {
  79              		.loc 1 158 8 discriminator 1 view .LVU9
  80 0008 FBE7     		b	.L5
  81              		.cfi_endproc
  82              	.LFE136:
  84              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  85              		.align	1
  86              		.global	MX_FREERTOS_Init
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  91              	MX_FREERTOS_Init:
  92              	.LFB134:
  91:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  93              		.loc 1 91 29 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97 0000 08B5     		push	{r3, lr}
  98              	.LCFI2:
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 3, -8
 101              		.cfi_offset 14, -4
 114:Core/Src/freertos.c **** 
 102              		.loc 1 114 3 view .LVU11
 114:Core/Src/freertos.c **** 
 103              		.loc 1 114 21 is_stmt 0 view .LVU12
 104 0002 074A     		ldr	r2, .L9
 105 0004 0021     		movs	r1, #0
 106 0006 0748     		ldr	r0, .L9+4
 107 0008 FFF7FEFF 		bl	osThreadNew
 108              	.LVL6:
 114:Core/Src/freertos.c **** 
 109              		.loc 1 114 19 view .LVU13
 110 000c 064B     		ldr	r3, .L9+8
 111 000e 1860     		str	r0, [r3]
 117:Core/Src/freertos.c **** 
 112              		.loc 1 117 3 is_stmt 1 view .LVU14
 117:Core/Src/freertos.c **** 
 113              		.loc 1 117 25 is_stmt 0 view .LVU15
 114 0010 064A     		ldr	r2, .L9+12
 115 0012 0021     		movs	r1, #0
 116 0014 0648     		ldr	r0, .L9+16
 117 0016 FFF7FEFF 		bl	osThreadNew
 118              	.LVL7:
 117:Core/Src/freertos.c **** 
 119              		.loc 1 117 23 view .LVU16
 120 001a 064B     		ldr	r3, .L9+20
 121 001c 1860     		str	r0, [r3]
ARM GAS  /tmp/ccML3V9q.s 			page 6


 127:Core/Src/freertos.c **** 
 122              		.loc 1 127 1 view .LVU17
 123 001e 08BD     		pop	{r3, pc}
 124              	.L10:
 125              		.align	2
 126              	.L9:
 127 0020 00000000 		.word	.LANCHOR0
 128 0024 00000000 		.word	start_uros_task
 129 0028 00000000 		.word	.LANCHOR1
 130 002c 00000000 		.word	.LANCHOR2
 131 0030 00000000 		.word	start_mtr_ctrl_task
 132 0034 00000000 		.word	.LANCHOR3
 133              		.cfi_endproc
 134              	.LFE134:
 136              		.global	motor_control_attributes
 137              		.section	.rodata.str1.4,"aMS",%progbits,1
 138              		.align	2
 139              	.LC0:
 140 0000 6D6F746F 		.ascii	"motor_control\000"
 140      725F636F 
 140      6E74726F 
 140      6C00
 141              		.global	motor_control_tControlBlock
 142              		.global	motor_control_Buffer
 143              		.global	motor_controlHandle
 144              		.global	uros_task_attributes
 145 000e 0000     		.align	2
 146              	.LC1:
 147 0010 75726F73 		.ascii	"uros_task\000"
 147      5F746173 
 147      6B00
 148              		.global	defaultTaskControlBlock
 149              		.global	uros_task_Buffer
 150              		.global	uros_taskHandle
 151              		.section	.bss.defaultTaskControlBlock,"aw",%nobits
 152              		.align	2
 155              	defaultTaskControlBlock:
 156 0000 00000000 		.space	92
 156      00000000 
 156      00000000 
 156      00000000 
 156      00000000 
 157              		.section	.bss.motor_controlHandle,"aw",%nobits
 158              		.align	2
 159              		.set	.LANCHOR3,. + 0
 162              	motor_controlHandle:
 163 0000 00000000 		.space	4
 164              		.section	.bss.motor_control_Buffer,"aw",%nobits
 165              		.align	2
 168              	motor_control_Buffer:
 169 0000 00000000 		.space	4000
 169      00000000 
 169      00000000 
 169      00000000 
 169      00000000 
 170              		.section	.bss.motor_control_tControlBlock,"aw",%nobits
 171              		.align	2
ARM GAS  /tmp/ccML3V9q.s 			page 7


 174              	motor_control_tControlBlock:
 175 0000 00000000 		.space	92
 175      00000000 
 175      00000000 
 175      00000000 
 175      00000000 
 176              		.section	.bss.uros_taskHandle,"aw",%nobits
 177              		.align	2
 178              		.set	.LANCHOR1,. + 0
 181              	uros_taskHandle:
 182 0000 00000000 		.space	4
 183              		.section	.bss.uros_task_Buffer,"aw",%nobits
 184              		.align	2
 187              	uros_task_Buffer:
 188 0000 00000000 		.space	12000
 188      00000000 
 188      00000000 
 188      00000000 
 188      00000000 
 189              		.section	.rodata.motor_control_attributes,"a"
 190              		.align	2
 191              		.set	.LANCHOR2,. + 0
 194              	motor_control_attributes:
 195 0000 00000000 		.word	.LC0
 196 0004 00000000 		.space	4
 197 0008 00000000 		.word	motor_control_tControlBlock
 198 000c 5C000000 		.word	92
 199 0010 00000000 		.word	motor_control_Buffer
 200 0014 A00F0000 		.word	4000
 201 0018 17000000 		.word	23
 202 001c 00000000 		.space	8
 202      00000000 
 203              		.section	.rodata.uros_task_attributes,"a"
 204              		.align	2
 205              		.set	.LANCHOR0,. + 0
 208              	uros_task_attributes:
 209 0000 10000000 		.word	.LC1
 210 0004 00000000 		.space	4
 211 0008 00000000 		.word	defaultTaskControlBlock
 212 000c 5C000000 		.word	92
 213 0010 00000000 		.word	uros_task_Buffer
 214 0014 E02E0000 		.word	12000
 215 0018 18000000 		.word	24
 216 001c 00000000 		.space	8
 216      00000000 
 217              		.text
 218              	.Letext0:
 219              		.file 2 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 220              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 221              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 222              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 223              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
ARM GAS  /tmp/ccML3V9q.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccML3V9q.s:20     .text.start_uros_task:0000000000000000 $t
     /tmp/ccML3V9q.s:26     .text.start_uros_task:0000000000000000 start_uros_task
     /tmp/ccML3V9q.s:53     .text.start_mtr_ctrl_task:0000000000000000 $t
     /tmp/ccML3V9q.s:59     .text.start_mtr_ctrl_task:0000000000000000 start_mtr_ctrl_task
     /tmp/ccML3V9q.s:85     .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccML3V9q.s:91     .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccML3V9q.s:127    .text.MX_FREERTOS_Init:0000000000000020 $d
     /tmp/ccML3V9q.s:194    .rodata.motor_control_attributes:0000000000000000 motor_control_attributes
     /tmp/ccML3V9q.s:138    .rodata.str1.4:0000000000000000 $d
     /tmp/ccML3V9q.s:174    .bss.motor_control_tControlBlock:0000000000000000 motor_control_tControlBlock
     /tmp/ccML3V9q.s:168    .bss.motor_control_Buffer:0000000000000000 motor_control_Buffer
     /tmp/ccML3V9q.s:162    .bss.motor_controlHandle:0000000000000000 motor_controlHandle
     /tmp/ccML3V9q.s:208    .rodata.uros_task_attributes:0000000000000000 uros_task_attributes
     /tmp/ccML3V9q.s:155    .bss.defaultTaskControlBlock:0000000000000000 defaultTaskControlBlock
     /tmp/ccML3V9q.s:187    .bss.uros_task_Buffer:0000000000000000 uros_task_Buffer
     /tmp/ccML3V9q.s:181    .bss.uros_taskHandle:0000000000000000 uros_taskHandle
     /tmp/ccML3V9q.s:152    .bss.defaultTaskControlBlock:0000000000000000 $d
     /tmp/ccML3V9q.s:158    .bss.motor_controlHandle:0000000000000000 $d
     /tmp/ccML3V9q.s:165    .bss.motor_control_Buffer:0000000000000000 $d
     /tmp/ccML3V9q.s:171    .bss.motor_control_tControlBlock:0000000000000000 $d
     /tmp/ccML3V9q.s:177    .bss.uros_taskHandle:0000000000000000 $d
     /tmp/ccML3V9q.s:184    .bss.uros_task_Buffer:0000000000000000 $d
     /tmp/ccML3V9q.s:190    .rodata.motor_control_attributes:0000000000000000 $d
     /tmp/ccML3V9q.s:204    .rodata.uros_task_attributes:0000000000000000 $d

UNDEFINED SYMBOLS
osDelay
osThreadNew
